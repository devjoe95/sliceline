{"version":3,"sources":["components/Banner.jsx","styles/colors.js","components/OrderItem.jsx","components/Bucket.jsx","components/FoodDialog.jsx","components/FoodItem.jsx","components/Menu.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["BannerStyled","styled","div","Banner","style","color","pizzaRed","pizzaSun","OrderItemStyled","OrderItem","orderItem","context","useContext","AppContext","Badge","backgroundColor","count","src","img","alt","name","height","price","toLocaleString","currency","cursor","onClick","id","newOrder","state","orders","filter","item","setState","localStorage","setItem","JSON","stringify","removeItem","xmlns","width","fill","className","viewBox","d","Bucket","useState","tax","totalPrice","useMemo","length","reduce","acc","val","useEffect","document","title","textAlign","map","order","index","Fragment","borderColor","Math","floor","Button","disabled","user","database","ref","push","set","username","displayName","email","items","then","auth","window","firebase","provider","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","err","variant","FoodDialog","show","handleClose","quantity","setQuantity","Modal","size","onHide","Header","Title","Body","ListGroup","Item","category","Row","Col","InputGroup","Prepend","FormControl","placeholder","aria-label","aria-describedby","Append","Footer","find","res","clonedOrders","addToBucket","FoodItem","setShow","md","border","background","Menu","menu","Spinner","animation","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","margin","display","LogoStyled","span","Navbar","fixed","Brand","href","Toggle","Collapse","Text","Dropdown","dangerouslySetInnerHTML","__html","join","Image","photoURL","roundedCircle","left","signOut","catch","console","log","GlobalStyle","createGlobalStyle","React","createContext","App","parse","getItem","on","snapshot","data","forEach","snap","key","Provider","value","Container","data-toggle","role","aria-expanded","aria-controls","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cb246a2b.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst BannerStyled = styled.div`\n  height: 300px;\n  background: url(\"images/banner.jpg\");\n  background-position: center;\n  background-size:cover;\n  filter:contrast(80%);\n  display:flex;\n  justify-content:center;\n  align-items:center\n`;\nconst Banner = () => {\n    return (\n      <BannerStyled>\n        <h1 style={{ color: \"white\" }}>Live 😃 . Love 💕 . Eat 🍔</h1>\n      </BannerStyled>\n    );\n}\n\nexport default Banner\n","export const bodyColor = \"#EEE\"\nexport const pizzaRed = \"#e45826\";\nexport const pizzaSun = \"#f0a500\";\nexport const pizzaLight = \"#e6d5b8\";\nexport const pizzaDark = \"#4a3933\";\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { pizzaRed } from \"../styles/colors\";\nimport { Badge } from \"react-bootstrap\";\nimport { AppContext } from \"../App\";\n\nconst OrderItemStyled = styled.div`\n  display: grid;\n  grid-template-columns: 25px repeat(4, 1fr);\n  gap: 10px;\n  justify-content: space-evenly;\n`;\nconst OrderItem = ({ orderItem }) => {\n  const context = useContext(AppContext);\n  const removeItem = (id) => {\n    const newOrder = context.state.orders.filter((item) => item.id !== id);\n    context.setState({ ...context.state, orders: newOrder });\n    localStorage.setItem(\"bucket\", JSON.stringify(newOrder));\n  };\n  return (\n    <OrderItemStyled>\n      <div style={{ color: \"white\" }}>\n        <Badge style={{ backgroundColor: pizzaRed }}>{orderItem.count}</Badge>\n      </div>\n      <div>\n        <img\n          src={orderItem.img}\n          alt={orderItem.name}\n          style={{ height: \"50px\" }}\n        />\n      </div>\n      <div>\n        <p>{orderItem.name}</p>\n      </div>\n      <div style={{ color: pizzaRed }}>\n        <p>\n          {orderItem.price.toLocaleString(\"en-US\", {\n            style: \"currency\",\n            currency: \"EGP\",\n          })}\n        </p>\n      </div>\n      <div\n        style={{ color: pizzaRed, cursor: \"pointer\" }}\n        onClick={() => removeItem(orderItem.id)}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          fill=\"currentColor\"\n          className=\"bi bi-trash-fill\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\n        </svg>\n      </div>\n    </OrderItemStyled>\n  );\n};\n\nOrderItem.propTypes = {\n  orderItem: PropTypes.object,\n};\n\nexport default OrderItem;\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { pizzaRed } from \"../styles/colors\";\nimport OrderItem from \"./OrderItem\";\nimport { AppContext, database } from \"../App\";\nimport { Button } from \"react-bootstrap\";\n\nconst Bucket = () => {\n  const context = useContext(AppContext);\n  const [tax, setTax] = useState(14 / 100);\n  const totalPrice = useMemo(() => {\n    if (context.state.orders.length !== 0) {\n      return context.state.orders.reduce(\n        (acc, val) => acc + val.count * val.price,\n        0\n      );\n    } else {\n      return 0;\n    }\n  }, [context.state.orders]);\n  useEffect(() => {\n    document.title = `(${context.state.orders.length}) ${document.title}`;\n  }, [context.state.orders]);\n  const orderHandler = () => {\n    const order = database.ref(\"/orders\").push();\n    order\n      .set({\n        username: context.state.user.displayName,\n        email: context.state.user.email,\n        items: context.state.orders,\n        totalPrice,\n      })\n      .then(() => {\n        context.setState({ ...context.state, orders: [] });\n        localStorage.removeItem(\"bucket\");\n      });\n  };\n  const checkout = () => {\n    if (!context.state.user) {\n      const auth = window.firebase.auth();\n      const provider = new window.firebase.auth.GoogleAuthProvider();\n      auth.signInWithPopup(provider);\n      auth.onAuthStateChanged(\n        (user) => {\n          context.setState({ ...context.state, user });\n        },\n        (err) => {}\n      );\n    } else {\n      orderHandler();\n    }\n  };\n  return (\n    <div className=\"my-5\">\n      <h2 className=\"text-center\" style={{ color: pizzaRed }}>\n        Bucket\n      </h2>\n      {context.state.orders.length <= 0 ? (\n        <p style={{ textAlign: \"center\" }}>Bucket is empty.</p>\n      ) : (\n        context.state.orders.map((order, index) => (\n          <React.Fragment key={index}>\n            <OrderItem orderItem={order} />\n            {context.state.orders.length - 1 === index ? (\n              <br />\n            ) : (\n              <hr style={{ borderColor: pizzaRed }} />\n            )}\n          </React.Fragment>\n        ))\n      )}\n      <p className=\"text-muted text-center\">\n        Adding a {Math.floor(tax * 100)}% TAX.\n      </p>\n      <div className=\"d-block text-center\">\n        <Button\n          disabled={context.state.orders.length === 0}\n          style={{ backgroundColor: pizzaRed, borderColor: pizzaRed }}\n          onClick={checkout}\n        >\n          Checkout\n          {totalPrice !== 0 &&\n            ` (${(totalPrice + totalPrice * tax).toLocaleString(\"en-US\", {\n              style: \"currency\",\n              currency: \"EGP\",\n            })})`}\n        </Button>\n        <Button\n          variant=\"outline-danger\"\n          className=\"mx-3\"\n          onClick={() => {\n            context.setState({ ...context.state, orders: [] });\n            localStorage.removeItem(\"bucket\");\n          }}\n        >\n          Reset\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Bucket;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Col,\n  FormControl,\n  InputGroup,\n  ListGroup,\n  Modal,\n  Row,\n} from \"react-bootstrap\";\nimport { AppContext } from \"../App\";\nimport { pizzaRed } from \"../styles/colors\";\n\nconst FoodDialog = ({ item, show, handleClose }) => {\n  const context = useContext(AppContext);\n  const [quantity, setQuantity] = useState(1);\n\n  if (!item) return null;\n  const order = {\n    ...item,\n    count: quantity,\n  };\n\n  const addToBucket = () => {\n    const selectedOrder = context.state.orders.find(\n      (res) => res.name === order.name\n    );\n    if (selectedOrder) {\n      const clonedOrders = context.state.orders.filter((res) =>\n        res.name === order.name ? (res.count += quantity) : res.count\n      );\n      context.setState({ ...context.state, orders: clonedOrders });\n    } else {\n      context.setState({\n        ...context.state,\n        orders: [...context.state.orders, order],\n      });\n    }\n    localStorage.setItem(\"bucket\", JSON.stringify(context.state.orders));\n    setQuantity(1);\n  };\n\n  return (\n    <>\n      <Modal size=\"sm\" show={show} onHide={handleClose}>\n        <Modal.Header className=\"p-0 overflow-hidden\">\n          <img src={item.img} alt={item.name} />\n        </Modal.Header>\n        <Modal.Title className=\"text-center mt-1\" style={{ color: pizzaRed }}>\n          {item.name}\n        </Modal.Title>\n        <Modal.Body>\n          <ListGroup>\n            <ListGroup.Item>Category: {item.category}</ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Quantity: </Col>\n                <Col>\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                      <Button\n                        style={{\n                          backgroundColor: pizzaRed,\n                          borderColor: pizzaRed,\n                        }}\n                        onClick={() => {\n                          if (quantity > 1) {\n                            setQuantity(quantity - 1);\n                          }\n                        }}\n                      >\n                        -\n                      </Button>{\" \"}\n                    </InputGroup.Prepend>\n                    <FormControl\n                      className=\"text-center\"\n                      placeholder={quantity}\n                      aria-label=\"Recipient's username\"\n                      aria-describedby=\"basic-addon2\"\n                      disabled\n                    />\n                    <InputGroup.Append>\n                      <Button\n                        style={{\n                          backgroundColor: pizzaRed,\n                          borderColor: pizzaRed,\n                        }}\n                        onClick={() => {\n                          if (quantity < 10) {\n                            setQuantity(quantity + 1);\n                          }\n                        }}\n                      >\n                        +\n                      </Button>{\" \"}\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Price:{\" \"}\n              {item.price.toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"EGP\",\n              })}\n            </ListGroup.Item>\n          </ListGroup>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            style={{ borderColor: pizzaRed, color: pizzaRed }}\n            variant=\"outline-danger\"\n            onClick={handleClose}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ backgroundColor: pizzaRed, borderColor: pizzaRed }}\n            onClick={() => {\n              addToBucket();\n              handleClose();\n            }}\n          >\n            Buy{\" \"}\n            {(item.price * quantity).toLocaleString(\"en-US\", {\n              style: \"currency\",\n              currency: \"EGP\",\n            })}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default FoodDialog;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles/FoodItem.css\";\nimport { Col } from \"react-bootstrap\";\nimport FoodDialog from \"./FoodDialog\";\nimport { pizzaRed } from \"../styles/colors\";\n\nconst FoodItem = ({ item }) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const { name, img, category, price } = item;\n  return (\n    <Col md={4} className=\"mb-3\">\n      <div\n        style={{ border: 0 }}\n        className=\"card bg-dark text-white\"\n        onClick={() => {\n          handleShow();\n        }}\n      >\n        <img src={img} className=\"card-img\" alt={name} />\n        <div className=\"card-img-overlay\">\n          <h4 className=\"card-title font-weight-bolder my-0\">{name}</h4>\n          <p className=\"card-text  m-0\">{category}</p>\n          <span className=\"card-text m-0 font-weight-bolder\" style={{background:pizzaRed}}>\n            {price.toLocaleString(\"en-US\", {\n              style: \"currency\",\n              currency: \"EGP\",\n            })}\n          </span>\n        </div>\n      </div>\n      <FoodDialog show={show} handleClose={handleClose} item={item} />\n    </Col>\n  );\n};\n\nFoodItem.propTypes = {\n  name: PropTypes.string,\n  img: PropTypes.string,\n  category: PropTypes.string,\n};\n\nexport default FoodItem;\n","import React, { useContext } from \"react\";\nimport FoodItem from \"./FoodItem\";\nimport { Row } from \"react-bootstrap\";\nimport { AppContext } from \"../App\";\nimport { Spinner } from \"react-bootstrap\";\nimport { pizzaRed, pizzaSun } from \"../styles/colors\";\n\nconst Menu = () => {\n  const context = useContext(AppContext);\n  return (\n    <div className=\"my-5\">\n      {context.state.menu.length === 0 ? (\n        <Spinner\n          animation=\"border\"\n          variant=\"warning\"\n          style={{\n            borderTopColor: pizzaSun,\n            borderBottomColor: pizzaSun,\n            borderLeftColor: pizzaRed,\n            borderRightColor: pizzaRed,\n            width: \"100px\",\n            height: \"100px\",\n            margin: \"auto\",\n            display: \"flex\",\n          }}\n        />\n      ) : (\n        <Row>\n          {context.state.menu.map((item, index) => (\n            <FoodItem key={index} item={item} />\n          ))}\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { pizzaRed, pizzaSun } from \"../styles/colors\";\nimport { AppContext } from \"../App\";\nimport { Button, Image, Navbar, Dropdown } from \"react-bootstrap\";\n\nconst LogoStyled = styled.span`\n  font-family: \"Righteous\", cursive;\n  font-size: 20px;\n  color: white;\n  text-shadow: 3px 3px 5px #333;\n`;\nconst Header = () => {\n  const context = useContext(AppContext);\n  const signIn = () => {\n    const auth = window.firebase.auth();\n    const provider = new window.firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n    auth.onAuthStateChanged(\n      (user) => {\n        context.setState({ ...context.state, user });\n        console.log(user);\n      },\n      (err) => {}\n    );\n  };\n  const signOut = () => {\n    const auth = window.firebase.auth();\n    auth\n      .signOut()\n      .then(() => {\n        context.setState({ ...context.state, user: null });\n      })\n      .catch((err) => {});\n  };\n  useEffect(() => {}, [context.state.user]);\n  return (\n    <Navbar style={{ backgroundColor: pizzaRed }} fixed=\"top\">\n      <Navbar.Brand href=\"#home\">\n        <LogoStyled>Sliceline 🍕</LogoStyled>\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text>\n          {context.state.user ? (\n            <Dropdown>\n              <style\n                dangerouslySetInnerHTML={{\n                  __html: [\n                    \".my-special-dropdown:after {\",\n                    '  content: \"\";',\n                    \"  border: 0;\",\n                    \"  margin-left: 0;\",\n                    \"}\",\n                  ].join(\"\\n\"),\n                }}\n              ></style>\n              <Dropdown.Toggle\n                style={{ background: pizzaSun, borderColor: pizzaSun }}\n                id=\"dropdown-basic\"\n                className=\"p-0 my-special-dropdown rounded-circle\"\n              >\n                <Image\n                  style={{ width: \"50px\", height: \"50px\" }}\n                  src={context.state.user.photoURL}\n                  roundedCircle\n                />\n              </Dropdown.Toggle>\n              <Dropdown.Menu style={{ left: \"-120px\" }}>\n                <Dropdown.Item href=\"#/action-1\">\n                  <span style={{ color: pizzaRed }}>Welcome</span>{\" \"}\n                  {context.state.user.displayName}\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/action-2\" onClick={signOut}>\n                  Sign Out\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          ) : (\n            <Button\n              style={{ background: pizzaSun, borderColor: pizzaSun }}\n              onClick={signIn}\n            >\n              Log In\n            </Button>\n          )}\n        </Navbar.Text>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Banner from \"./components/Banner\";\nimport Bucket from \"./components/Bucket\";\nimport Menu from \"./components/Menu\";\nimport Header from \"./components/Header\";\nimport { bodyColor, pizzaRed } from \"./styles/colors\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background-color: ${bodyColor};\n    font-family: 'Open Sans', sans-serif;\n  }\n\n  h1, h2, h3 {\n    font-family: 'Righteous', cursive;\n  }\n`;\n\nexport const AppContext = React.createContext(\"test\");\n\nexport const database = window.firebase.database();\n\nfunction App() {\n  const [state, setState] = useState({\n    menu: [],\n    orders: JSON.parse(localStorage.getItem(\"bucket\")) || [],\n    user: null,\n  });\n\n  useEffect(() => {\n    const menu = database.ref(\"menu\");\n    menu.on(\"value\", (snapshot) => {\n      let data = [];\n      snapshot.forEach((snap) => {\n        data.push({ ...snap.val(), id: snap.key });\n      });\n      setState({ ...state, menu: data });\n    });\n    if (state.orders.length <= 0) {\n      document.title = `Sliceline`;\n    } else {\n      document.title = `(${state.orders.length}) Sliceline`;\n    }\n  }, []);\n  return (\n    <AppContext.Provider value={{ state, setState }}>\n      <GlobalStyle />\n      <Header />\n      <Banner />\n      <Container>\n        <Row>\n          <Col md={8}>\n            <a\n              className=\"btn mt-3\"\n              style={{ backgroundColor: pizzaRed, color: \"white\" }}\n              data-toggle=\"collapse\"\n              href=\"#collapseExample\"\n              role=\"button\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseExample\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"currentColor\"\n                className=\"bi bi-funnel-fill mx-1\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5v-2z\" />\n              </svg>\n              Filter\n            </a>\n            <div className=\"collapse\" id=\"collapseExample\">\n              <div className=\"card card-body mt-3\">\n                Some placeholder content for the collapse component. This panel\n                is hidden by default but revealed when the user activates the\n                relevant trigger.\n              </div>\n            </div>\n            <Menu />\n          </Col>\n          <Col md={4}>\n            <Bucket />\n          </Col>\n        </Row>\n      </Container>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/js/bootstrap.min'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}