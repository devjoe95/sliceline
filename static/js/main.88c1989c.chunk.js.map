{"version":3,"sources":["components/Banner.jsx","styles/colors.js","components/OrderItem.jsx","components/Bucket.jsx","components/FoodDialog.jsx","components/FoodItem.jsx","components/Menu.jsx","components/Navbar.jsx","data.js","App.js","reportWebVitals.js","index.js"],"names":["BannerStyled","styled","div","Banner","style","color","pizzaRed","OrderItemStyled","OrderItem","orderItem","Badge","backgroundColor","count","src","img","alt","name","height","price","toLocaleString","currency","xmlns","width","fill","className","viewBox","d","Bucket","context","useContext","AppContext","useState","tax","totalPrize","useMemo","state","orders","length","reduce","acc","val","useEffect","document","title","textAlign","map","order","index","Fragment","borderColor","Math","floor","ButtonGroup","aria-label","Button","variant","onClick","setState","localStorage","removeItem","FoodDialog","item","show","handleClose","quantity","setQuantity","Modal","onHide","Header","Title","Body","ListGroup","Item","category","Row","Col","InputGroup","Prepend","FormControl","placeholder","aria-describedby","disabled","Append","Footer","find","res","clonedOrders","filter","setItem","JSON","stringify","addToBucket","FoodItem","setShow","md","Menu","menu","LogoStyled","span","Navbar","user","fixed","Brand","href","Toggle","Collapse","Text","auth","window","firebase","provider","GoogleAuthProvider","signInWithPopup","foods","GlobalStyle","createGlobalStyle","React","createContext","App","parse","getItem","Provider","value","Container","data-toggle","role","aria-expanded","aria-controls","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPAGMA,EAAeC,IAAOC,IAAV,4OAkBHC,EARA,WACX,OACE,cAACH,EAAD,UACE,oBAAII,MAAO,CAAEC,MAAO,SAApB,yE,OCfKC,EAAW,U,QCKlBC,EAAkBN,IAAOC,IAAV,6IA6CNM,EAvCG,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAChB,OACI,eAACF,EAAD,WACI,qBAAKH,MAAO,CAACC,MAAO,SAApB,SACI,cAACK,EAAA,EAAD,CAAON,MAAO,CAACO,gBAAiBL,GAAhC,SAA4CG,EAAUG,UAE1D,8BACI,qBACIC,IAAKJ,EAAUK,IACfC,IAAKN,EAAUO,KACfZ,MAAO,CAACa,OAAQ,YAGxB,8BACI,4BAAIR,EAAUO,SAElB,qBAAKZ,MAAO,CAACC,MAAOC,GAApB,SACI,4BACKG,EAAUS,MAAMC,eAAe,QAAS,CACrCf,MAAO,WACPgB,SAAU,YAItB,qBAAKhB,MAAO,CAACC,MAAOC,GAApB,SACI,qBAAKe,MAAM,6BAA6BC,MAAM,KAAKL,OAAO,KAAKM,KAAK,eAC/DC,UAAU,mBAAmBC,QAAQ,YAD1C,SAEI,sBACIC,EAAE,uT,gBCgBXC,EAlDA,WACX,IAAMC,EAAUC,qBAAWC,GADV,EAEKC,mBAAS,KAFd,mBAEVC,EAFU,KAGXC,GAHW,KAGEC,mBAAQ,WACvB,OAAoC,IAAhCN,EAAQO,MAAMC,OAAOC,OACdT,EAAQO,MAAMC,OAAOE,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAI5B,MAAQ4B,EAAItB,QAAQ,GAEzE,IAEZ,CAACU,EAAQO,MAAMC,UAIlB,OAHAK,qBAAU,WACNC,SAASC,MAAT,WAAqBf,EAAQO,MAAMC,OAAOC,OAA1C,aAAqDK,SAASC,SAC/D,CAACf,EAAQO,MAAMC,SAEd,sBAAKZ,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAcpB,MAAO,CAACC,MAAOC,GAA3C,oBACCsB,EAAQO,MAAMC,OAAOC,QAAU,EAC5B,mBAAGjC,MAAO,CAACwC,UAAW,UAAtB,8BAEAhB,EAAQO,MAAMC,OAAOS,KAAI,SAACC,EAAOC,GAAR,OACrB,eAAC,IAAMC,SAAP,WACI,cAAC,EAAD,CAAWvC,UAAWqC,IACrBlB,EAAQO,MAAMC,OAAOC,OAAS,IAAMU,EACjC,uBAEA,oBAAI3C,MAAO,CAAC6C,YAAa3C,OALZyC,MAU7B,oBAAGvB,UAAU,yBAAb,sBACc0B,KAAKC,MAAY,IAANnB,GADzB,YAGA,eAACoB,EAAA,EAAD,CAAaC,aAAW,iBAAxB,UACI,eAACC,EAAA,EAAD,CAAQlD,MAAO,CAACO,gBAAiBL,EAAU2C,YAAa3C,GAAxD,qBACoB,IAAf2B,GAAA,aACKA,EAAaA,EAAaD,GAAKb,eAAe,QAAS,CACzDf,MAAO,WACPgB,SAAU,QAHb,QAKL,cAACkC,EAAA,EAAD,CAAQC,QAAQ,iBACRC,QAAS,WACL5B,EAAQ6B,SAAR,2BAAqB7B,EAAQO,OAA7B,IAAoCC,OAAQ,MAC5CsB,aAAaC,WAAW,WAHpC,0B,gECsDDC,EA/FI,SAAC,GAIO,IAHHC,EAGE,EAHFA,KACAC,EAEE,EAFFA,KACAC,EACE,EADFA,YAEdnC,EAAUC,qBAAWC,GADL,EAEUC,mBAAS,GAFnB,mBAEfiC,EAFe,KAELC,EAFK,KAItB,IAAKJ,EAAM,OAAO,KAClB,IAAMf,EAAK,2BACJe,GADI,IAEPjD,MAAOoD,IAiBX,OACI,mCACI,eAACE,EAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQJ,EAA3B,UAEI,cAACG,EAAA,EAAME,OAAP,CAAc5C,UAAU,sBAAxB,SACI,qBAAKX,IAAKgD,EAAK/C,IAAKC,IAAK8C,EAAK7C,SAElC,cAACkD,EAAA,EAAMG,MAAP,CAAa7C,UAAU,mBAAmBpB,MAAO,CAACC,MAAOC,GAAzD,SAAqEuD,EAAK7C,OAC1E,cAACkD,EAAA,EAAMI,KAAP,UACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAUC,KAAX,wBAA2BX,EAAKY,YAChC,cAACF,EAAA,EAAUC,KAAX,UACI,eAACE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,yBACA,cAACA,EAAA,EAAD,UAAK,eAACC,EAAA,EAAD,CAAYpD,UAAU,OAAtB,UACD,eAACoD,EAAA,EAAWC,QAAZ,WACI,cAACvB,EAAA,EAAD,CAAQlD,MAAO,CAACO,gBAAiBL,EAAU2C,YAAa3C,GAChDkD,QAAS,WACDQ,EAAW,GACXC,EAAYD,EAAW,IAHvC,eADJ,OAOA,cAACc,EAAA,EAAD,CACItD,UAAU,cACVuD,YAAaf,EACbX,aAAW,uBACX2B,mBAAiB,eACjBC,UAAQ,IACZ,eAACL,EAAA,EAAWM,OAAZ,WACI,cAAC5B,EAAA,EAAD,CAAQlD,MAAO,CAACO,gBAAiBL,EAAU2C,YAAa3C,GAChDkD,QAAS,WACDQ,EAAW,IACXC,EAAYD,EAAW,IAHvC,eADJ,iBAWZ,eAACO,EAAA,EAAUC,KAAX,qBAAwBX,EAAK3C,MAAMC,eAAe,QAAS,CACvDf,MAAO,WACPgB,SAAU,gBAMtB,eAAC8C,EAAA,EAAMiB,OAAP,WACI,cAAC7B,EAAA,EAAD,CAAQlD,MAAO,CAAC6C,YAAa3C,EAAUD,MAAOC,GAAWiD,QAAQ,iBACzDC,QAASO,EADjB,mBAIA,eAACT,EAAA,EAAD,CAAQlD,MAAO,CAACO,gBAAiBL,EAAU2C,YAAa3C,GAAWkD,QAAS,YAlE5F,WAEI,GADsB5B,EAAQO,MAAMC,OAAOgD,MAAK,SAACC,GAAD,OAASA,EAAIrE,OAAS8B,EAAM9B,QACzD,CACf,IAAMsE,EAAe1D,EAAQO,MAAMC,OAAOmD,QAAO,SAACF,GAAD,OAC7CA,EAAIrE,OAAS8B,EAAM9B,KAAQqE,EAAIzE,OAASoD,EAAYqB,EAAIzE,SAE5DgB,EAAQ6B,SAAR,2BAAqB7B,EAAQO,OAA7B,IAAoCC,OAAQkD,UAE5C1D,EAAQ6B,SAAR,2BAAqB7B,EAAQO,OAA7B,IAAoCC,OAAO,GAAD,mBAAMR,EAAQO,MAAMC,QAApB,CAA4BU,OAE1EY,aAAa8B,QAAQ,SAAUC,KAAKC,UAAU9D,EAAQO,MAAMC,SAC5D6B,EAAY,GAwDI0B,GACA5B,KAFJ,gBAIQ,KACFF,EAAK3C,MAAQ8C,GAAU7C,eAAe,QAAS,CAC7Cf,MAAO,WACPgB,SAAU,oBCpDvBwE,EAjCE,SAAC,GAAY,IAAX/B,EAAU,EAAVA,KAAU,EACD9B,oBAAS,GADR,mBAClB+B,EADkB,KACZ+B,EADY,KAIlB7E,EAA8B6C,EAA9B7C,KAAMF,EAAwB+C,EAAxB/C,IAAK2D,EAAmBZ,EAAnBY,SAAUvD,EAAS2C,EAAT3C,MAC5B,OACI,eAACyD,EAAA,EAAD,CAAKmB,GAAI,EAAGtE,UAAU,OAAtB,UACI,sBAAKA,UAAU,0BAA0BgC,QAAS,WAJjCqC,GAAQ,IAIzB,UAGI,qBAAKhF,IAAKC,EAAKU,UAAU,WAAWT,IAAKC,IACzC,sBAAKQ,UAAU,mBAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BR,IAC5B,mBAAGQ,UAAU,iBAAb,SAA+BiD,IAC/B,mBAAGjD,UAAU,gBAAb,SAA8BN,EAAMC,eAAe,QAAS,CACxDf,MAAO,WACPgB,SAAU,gBAItB,cAAC,EAAD,CAAY0C,KAAMA,EAAMC,YAlBZ,kBAAM8B,GAAQ,IAkBwBhC,KAAMA,QCNrDkC,EAhBF,WACT,IAAMnE,EAAUC,qBAAWC,GAC3B,OACQ,qBAAKN,UAAU,OAAf,SACI,cAACkD,EAAA,EAAD,UACK9C,EAAQO,MAAM6D,KAAKnD,KAAI,SAACgB,EAAMd,GAAP,OACpB,cAAC,EAAD,CAEIc,KAAMA,GADDd,WCN3BkD,EAAahG,IAAOiG,KAAV,yIA8BDC,EAxBA,SAATA,IAAgB,IAAD,EACStE,qBAAWC,GAA9BK,EADU,EACVA,MADU,EACHsB,SAOd,OADAhB,qBAAU,cAAO,CAACN,EAAMiE,OAEpB,eAACD,EAAD,CAAQ/F,MAAO,CAACO,gBAAiBL,GAAW+F,MAAM,MAAlD,UACI,cAACF,EAAOG,MAAR,CAAcC,KAAK,QAAnB,SAA2B,cAACN,EAAD,uCAC3B,cAACE,EAAOK,OAAR,IACA,cAACL,EAAOM,SAAR,CAAiBjF,UAAU,sBAA3B,SACI,cAAC2E,EAAOO,KAAR,UACKvE,EAAMiE,KAAO,+CAAiB,mBAAGG,KAAK,SAAR,SAAkBpE,EAAMiE,UACnD,cAAC9C,EAAA,EAAD,CAAQE,QAbb,WACX,IAAMmD,EAAOC,OAAOC,SAASF,OACvBG,EAAW,IAAIF,OAAOC,SAASF,KAAKI,mBAC1CJ,EAAKK,gBAAgBF,IAUL,4B,QC3BXG,EAAQ,CACnB,CACEjG,KAAM,aACNF,IAAK,wBACL2D,SAAU,QACVvD,MAAM,IAER,CACEF,KAAM,gBACNF,IAAK,2BACL2D,SAAU,QACVvD,MAAM,IAER,CACEF,KAAM,iBACNF,IAAK,4BACL2D,SAAU,QACVvD,MAAM,IAER,CACEF,KAAM,cACNF,IAAK,yBACL2D,SAAU,SACVvD,MAAM,IAER,CACEF,KAAM,iBACNF,IAAK,4BACL2D,SAAU,SACVvD,MAAM,IAER,CACEF,KAAM,gBACNF,IAAK,2BACL2D,SAAU,UACVvD,MAAM,IAER,CACEF,KAAM,gBACNF,IAAK,2BACL2D,SAAU,UACVvD,MAAM,IAER,CACEF,KAAM,QACNF,IAAK,mBACL2D,SAAU,QACVvD,MAAM,IAER,CACEF,KAAM,UACNF,IAAK,qBACL2D,SAAU,UACVvD,MAAM,IAER,CACEF,KAAM,eACNF,IAAK,0BACL2D,SAAU,aACVvD,MAAM,GAER,CACEF,KAAM,QACNF,IAAK,mBACL2D,SAAU,aACVvD,MAAM,ICvDJgG,EAAcC,YAAH,iNRVQ,QQuBZrF,EAAasF,IAAMC,cAAc,QAExCV,EAAOC,OAAOC,SAASF,OACvBG,EAAW,IAAIF,OAAOC,SAASF,KAAKI,mBAC1CJ,EAAKK,gBAAgBF,GAkDNQ,MAhDf,WAAgB,IAAD,EACevF,mBAAS,CAC/BiE,KAAMiB,EACN7E,OAAQqD,KAAK8B,MAAM7D,aAAa8D,QAAQ,YAAc,GACtDpB,KAAM,OAJC,mBACJjE,EADI,KACGsB,EADH,KAaX,OAPAhB,qBAAU,WACFN,EAAMC,OAAOC,QAAU,EACvBK,SAASC,MAAT,YAEAD,SAASC,MAAT,WAAqBR,EAAMC,OAAOC,OAAlC,iBAEL,CAACF,EAAMC,SAEN,cAAC,IAAMY,SAAP,UACI,eAAClB,EAAW2F,SAAZ,CAAqBC,MAAO,CAACvF,QAAOsB,YAApC,UACI,cAACyD,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACS,EAAA,EAAD,UACI,eAACjD,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKmB,GAAI,EAAT,UACI,oBAAGtE,UAAU,WAAWpB,MAAO,CAACO,gBAAiBL,EAAUD,MAAO,SAC/DuH,cAAY,WAAWrB,KAAK,mBAAmBsB,KAAK,SACpDC,gBAAc,QAAQC,gBAAc,kBAFvC,UAGI,qBAAK1G,MAAM,6BAA6BC,MAAM,KAAKL,OAAO,KAAKM,KAAK,eAC/DC,UAAU,yBAAyBC,QAAQ,YADhD,SAEI,sBACIC,EAAE,yKANd,YAUA,qBAAKF,UAAU,WAAWwG,GAAG,kBAA7B,SACI,qBAAKxG,UAAU,sBAAf,+JAKJ,cAAC,EAAD,OAEJ,eAACmD,EAAA,EAAD,CAAKmB,GAAI,EAAT,cAAa,cAAC,EAAD,kBCzDtBmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlG,SAASmG,eAAe,SAM1BZ,M","file":"static/js/main.88c1989c.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst BannerStyled = styled.div`\n  height: 300px;\n  background: url(\"images/banner.jpg\");\n  background-position: center;\n  background-size:cover;\n  filter:contrast(80%);\n  display:flex;\n  justify-content:center;\n  align-items:center\n`;\nconst Banner = () => {\n    return (\n      <BannerStyled>\n        <h1 style={{ color: \"white\" }}>Live 😃 . Love 💕 . Eat 🍔</h1>\n      </BannerStyled>\n    );\n}\n\nexport default Banner\n","export const bodyColor = \"#EEE\"\nexport const pizzaRed = \"#e45826\";\nexport const pizzaSun = \"#f0a500\";\nexport const pizzaLight = \"#e6d5b8\";\nexport const pizzaDark = \"#4a3933\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {pizzaRed} from \"../styles/colors\";\nimport {Badge} from \"react-bootstrap\";\n\nconst OrderItemStyled = styled.div`\n  display: grid;\n  grid-template-columns: 25px repeat(4, 1fr);\n  gap: 10px;\n  justify-content: space-evenly;\n`;\nconst OrderItem = ({orderItem}) => {\n    return (\n        <OrderItemStyled>\n            <div style={{color: \"white\"}}>\n                <Badge style={{backgroundColor: pizzaRed}}>{orderItem.count}</Badge>\n            </div>\n            <div>\n                <img\n                    src={orderItem.img}\n                    alt={orderItem.name}\n                    style={{height: \"50px\"}}\n                />\n            </div>\n            <div>\n                <p>{orderItem.name}</p>\n            </div>\n            <div style={{color: pizzaRed}}>\n                <p>\n                    {orderItem.price.toLocaleString(\"en-US\", {\n                        style: \"currency\",\n                        currency: \"EGP\",\n                    })}\n                </p>\n            </div>\n            <div style={{color: pizzaRed}}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                     className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n                    <path\n                        d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\n                </svg>\n            </div>\n        </OrderItemStyled>\n    );\n};\n\nOrderItem.propTypes = {\n    orderItem: PropTypes.object,\n};\n\nexport default OrderItem;\n","import React, {useContext, useEffect, useMemo, useState} from \"react\";\nimport {pizzaRed} from \"../styles/colors\";\nimport OrderItem from \"./OrderItem\";\nimport {AppContext} from \"../App\";\nimport {Button, ButtonGroup} from \"react-bootstrap\";\n\nconst Bucket = () => {\n    const context = useContext(AppContext)\n    const [tax, setTax] = useState(14 / 100)\n    const totalPrize = useMemo(() => {\n        if (context.state.orders.length !== 0) {\n            return context.state.orders.reduce((acc, val) => (acc + val.count * val.price), 0)\n        } else {\n            return 0\n        }\n    }, [context.state.orders])\n    useEffect(() => {\n        document.title = `(${context.state.orders.length}) ${document.title}`;\n    }, [context.state.orders]);\n    return (\n        <div className=\"my-5\">\n            <h2 className=\"text-center\" style={{color: pizzaRed}}>Bucket</h2>\n            {context.state.orders.length <= 0 ? (\n                <p style={{textAlign: \"center\"}}>Bucket is empty.</p>\n            ) : (\n                context.state.orders.map((order, index) => (\n                    <React.Fragment key={index}>\n                        <OrderItem orderItem={order}/>\n                        {context.state.orders.length - 1 === index ? (\n                            <br/>\n                        ) : (\n                            <hr style={{borderColor: pizzaRed}}/>\n                        )}\n                    </React.Fragment>\n                ))\n            )}\n            <p className=\"text-muted text-center\">\n                Adding a {Math.floor(tax * 100)}% TAX.\n            </p>\n            <ButtonGroup aria-label=\"Bucket Control\">\n                <Button style={{backgroundColor: pizzaRed, borderColor: pizzaRed}}>Checkout\n                    {totalPrize !== 0 &&\n                    ` (${(totalPrize + totalPrize * tax).toLocaleString(\"en-US\", {\n                        style: \"currency\",\n                        currency: \"EGP\",\n                    })})`}</Button>\n                <Button variant=\"outline-danger\"\n                        onClick={() => {\n                            context.setState({...context.state, orders: []})\n                            localStorage.removeItem('bucket')\n                        }}>Reset</Button>\n            </ButtonGroup>\n        </div>\n    );\n};\n\nexport default Bucket;\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {Button, Col, FormControl, InputGroup, ListGroup, Modal, Row} from \"react-bootstrap\";\nimport {AppContext} from \"../App\";\nimport {pizzaRed} from \"../styles/colors\";\n\nconst FoodDialog = ({\n                        item,\n                        show,\n                        handleClose\n                    }) => {\n    const context = useContext(AppContext)\n    const [quantity, setQuantity] = useState(1);\n\n    if (!item) return null;\n    const order = {\n        ...item,\n        count: quantity,\n    };\n\n    function addToBucket() {\n        const selectedOrder = context.state.orders.find((res) => res.name === order.name);\n        if (selectedOrder) {\n            const clonedOrders = context.state.orders.filter((res) =>\n                res.name === order.name ? (res.count += quantity) : res.count\n            );\n            context.setState({...context.state, orders: clonedOrders})\n        } else {\n            context.setState({...context.state, orders: [...context.state.orders, order]});\n        }\n        localStorage.setItem('bucket', JSON.stringify(context.state.orders))\n        setQuantity(1)\n    }\n\n    return (\n        <>\n            <Modal show={show} onHide={handleClose}\n            >\n                <Modal.Header className=\"p-0 overflow-hidden\">\n                    <img src={item.img} alt={item.name}/>\n                </Modal.Header>\n                <Modal.Title className=\"text-center mt-1\" style={{color: pizzaRed}}>{item.name}</Modal.Title>\n                <Modal.Body>\n                    <ListGroup>\n                        <ListGroup.Item>Category: {item.category}</ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Quantity: </Col>\n                                <Col><InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <Button style={{backgroundColor: pizzaRed, borderColor: pizzaRed}}\n                                                onClick={() => {\n                                                    if (quantity > 1) {\n                                                        setQuantity(quantity - 1);\n                                                    }\n                                                }}>-</Button> </InputGroup.Prepend>\n                                    <FormControl\n                                        className=\"text-center\"\n                                        placeholder={quantity}\n                                        aria-label=\"Recipient's username\"\n                                        aria-describedby=\"basic-addon2\"\n                                        disabled/>\n                                    <InputGroup.Append>\n                                        <Button style={{backgroundColor: pizzaRed, borderColor: pizzaRed}}\n                                                onClick={() => {\n                                                    if (quantity < 10) {\n                                                        setQuantity(quantity + 1);\n                                                    }\n                                                }}>+</Button> </InputGroup.Append>\n                                </InputGroup>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>Price: {item.price.toLocaleString(\"en-US\", {\n                            style: \"currency\",\n                            currency: \"EGP\",\n                        })}</ListGroup.Item>\n                    </ListGroup>\n                </Modal.Body>\n\n\n                <Modal.Footer>\n                    <Button style={{borderColor: pizzaRed, color: pizzaRed}} variant=\"outline-danger\"\n                            onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button style={{backgroundColor: pizzaRed, borderColor: pizzaRed}} onClick={() => {\n                        addToBucket();\n                        handleClose()\n                    }}>\n                        Buy{\" \"}\n                        {(item.price * quantity).toLocaleString(\"en-US\", {\n                            style: \"currency\",\n                            currency: \"EGP\",\n                        })}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>)\n};\n\nexport default FoodDialog;\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles/FoodItem.css\";\nimport {Col} from \"react-bootstrap\";\nimport FoodDialog from \"./FoodDialog\";\n\nconst FoodItem = ({item}) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const {name, img, category, price} = item;\n    return (\n        <Col md={4} className=\"mb-3\">\n            <div className=\"card bg-dark text-white\" onClick={() => {\n                handleShow()\n            }}>\n                <img src={img} className=\"card-img\" alt={name}/>\n                <div className=\"card-img-overlay\">\n                    <h4 className=\"card-title\">{name}</h4>\n                    <p className=\"card-text  m-0\">{category}</p>\n                    <p className=\"card-text m-0\">{price.toLocaleString(\"en-US\", {\n                        style: \"currency\",\n                        currency: \"EGP\",\n                    })}</p>\n                </div>\n            </div>\n            <FoodDialog show={show} handleClose={handleClose} item={item}/>\n        </Col>\n    )\n}\n\nFoodItem.propTypes =\n    {\n        name: PropTypes.string,\n        img: PropTypes.string,\n        category: PropTypes.string,\n    }\n;\n\nexport default FoodItem;\n","import React, {useContext} from \"react\";\nimport FoodItem from \"./FoodItem\";\nimport {Row} from \"react-bootstrap\";\nimport {AppContext} from \"../App\";\n\nconst Menu = () => {\n    const context = useContext(AppContext)\n    return (\n            <div className=\"my-5\">\n                <Row>\n                    {context.state.menu.map((item, index) => (\n                        <FoodItem\n                            key={index}\n                            item={item}\n                        />\n                    ))}\n                </Row>\n            </div>\n    );\n};\n\nexport default Menu;\n","import React, {useContext, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport {pizzaRed} from \"../styles/colors\";\nimport {AppContext} from \"../App\";\nimport {Button} from \"react-bootstrap\";\n\nconst LogoStyled = styled.span`\n  font-family: \"Righteous\", cursive;\n  font-size: 20px;\n  color: white;\n  text-shadow: 3px 3px 5px #333;\n`;\nconst Navbar = () => {\n    const {state, setState} = useContext(AppContext)\n    const signIn = () => {\n        const auth = window.firebase.auth()\n        const provider = new window.firebase.auth.GoogleAuthProvider()\n        auth.signInWithPopup(provider)\n    }\n    useEffect(()=>{},[state.user])\n    return (\n        <Navbar style={{backgroundColor: pizzaRed}} fixed=\"top\">\n            <Navbar.Brand href=\"#home\"><LogoStyled>Sliceline 🍕</LogoStyled></Navbar.Brand>\n            <Navbar.Toggle/>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Navbar.Text>\n                    {state.user ? <p>Signed in as: <a href=\"#login\">{state.user}</a></p> :\n                        <Button onClick={signIn}>Log In</Button>}\n\n                </Navbar.Text>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\n\nexport default Navbar;\n","export const foods = [\n  {\n    name: \"Meat Pizza\",\n    img: \"images/meat-pizza.jpg\",\n    category: \"Pizza\",\n    price:20,\n  },\n  {\n    name: \"Sausage Pizza\",\n    img: \"images/sausage-pizza.jpg\",\n    category: \"Pizza\",\n    price:20,\n  },\n  {\n    name: \"Peperoni Pizza\",\n    img: \"images/peperoni-pizza.jpg\",\n    category: \"Pizza\",\n    price:15,\n  },\n  {\n    name: \"Meat Burger\",\n    img: \"images/meat-burger.jpg\",\n    category: \"Burger\",\n    price:12,\n  },\n  {\n    name: \"Chicken Burger\",\n    img: \"images/chicken-burger.jpg\",\n    category: \"Burger\",\n    price:17,\n  },\n  {\n    name: \"Chicken Wings\",\n    img: \"images/chicken-wings.jpg\",\n    category: \"Chicken\",\n    price:18,\n  },\n  {\n    name: \"Fried Chicken\",\n    img: \"images/fried-chicken.jpg\",\n    category: \"Chicken\",\n    price:16,\n  },\n  {\n    name: \"Pasta\",\n    img: \"images/pasta.jpg\",\n    category: \"Pasta\",\n    price:21,\n  },\n  {\n    name: \"Noodles\",\n    img: \"images/noodles.jpg\",\n    category: \"Noodles\",\n    price:13,\n  },\n  {\n    name: \"French Fried\",\n    img: \"images/french-fried.jpg\",\n    category: \"Appetizers\",\n    price:7,\n  },\n  {\n    name: \"Salad\",\n    img: \"images/salad.jpg\",\n    category: \"Appetizers\",\n    price:4,\n  },\n];\n","import React, {useEffect, useState} from \"react\";\nimport {createGlobalStyle} from \"styled-components\";\nimport Banner from \"./components/Banner\";\nimport Bucket from \"./components/Bucket\";\nimport Menu from \"./components/Menu\";\nimport Navbar from \"./components/Navbar\";\nimport {bodyColor, pizzaRed} from \"./styles/colors\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {foods} from \"./data\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background-color: ${bodyColor};\n    font-family: 'Open Sans', sans-serif;\n  }\n\n  h1, h2, h3 {\n    font-family: 'Righteous', cursive;\n  }\n`;\n\nexport const AppContext = React.createContext(\"test\")\n\nconst auth = window.firebase.auth()\nconst provider = new window.firebase.auth.GoogleAuthProvider()\nauth.signInWithPopup(provider)\n\nfunction App() {\n    const [state, setState] = useState({\n        menu: foods,\n        orders: JSON.parse(localStorage.getItem('bucket')) || [],\n        user: null\n    })\n    useEffect(() => {\n        if (state.orders.length <= 0) {\n            document.title = `Sliceline`;\n        } else {\n            document.title = `(${state.orders.length}) Sliceline`;\n        }\n    }, [state.orders]);\n    return (\n        <React.Fragment>\n            <AppContext.Provider value={{state, setState}}>\n                <GlobalStyle/>\n                <Navbar/>\n                <Banner/>\n                <Container>\n                    <Row>\n                        <Col md={8}>\n                            <a className=\"btn mt-3\" style={{backgroundColor: pizzaRed, color: \"white\"}}\n                               data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\"\n                               aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                     className=\"bi bi-funnel-fill mx-1\" viewBox=\"0 0 16 16\">\n                                    <path\n                                        d=\"M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5v-2z\"/>\n                                </svg>\n                                Filter\n                            </a>\n                            <div className=\"collapse\" id=\"collapseExample\">\n                                <div className=\"card card-body mt-3\">\n                                    Some placeholder content for the collapse component. This panel is hidden by default\n                                    but revealed when the user activates the relevant trigger.\n                                </div>\n                            </div>\n                            <Menu/>\n                        </Col>\n                        <Col md={4}> <Bucket/></Col>\n                    </Row>\n                </Container>\n            </AppContext.Provider>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/js/bootstrap.min'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}